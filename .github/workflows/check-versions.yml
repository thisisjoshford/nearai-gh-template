name: Check Agent Versions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check_versions:
    runs-on: ubuntu-latest
    outputs:
      modified_agents: ${{ steps.find_modified.outputs.modified_agents }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Find modified agents
        id: find_modified
        run: |
          # Get list of modified agent metadata files
          MODIFIED_AGENTS=$(git diff --name-only HEAD^ HEAD | grep "^agents/.*/.*metadata.json" || true)

          if [ -z "$MODIFIED_AGENTS" ]; then
            echo "No agent metadata files were modified"
            echo "modified_agents=[]" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Convert to JSON array for output
          MODIFIED_JSON="["
          for agent in $MODIFIED_AGENTS; do
            NAMESPACE=$(echo $agent | cut -d'/' -f2)
            AGENT_NAME=$(jq -r .name $agent)
            MODIFIED_JSON="${MODIFIED_JSON}\"${NAMESPACE}/${AGENT_NAME}\","
          done
          MODIFIED_JSON="${MODIFIED_JSON%,}]"

          echo "modified_agents=$MODIFIED_JSON" >> $GITHUB_OUTPUT
          echo "Found modified agents: $MODIFIED_JSON"

      - name: Check version updates
        if: steps.find_modified.outputs.modified_agents != '[]'
        run: |
          # Get list of modified agent metadata files
          MODIFIED_AGENTS=$(git diff --name-only HEAD^ HEAD | grep "^agents/.*/.*metadata.json" || true)

          # Check each modified agent's version
          for agent in $MODIFIED_AGENTS; do
            echo "Checking version for agent: $agent"
            
            # Get current version
            CURRENT_VERSION=$(jq -r .version $agent)
            
            # Get previous version
            git checkout HEAD^
            if [ -f "$agent" ]; then
              PREVIOUS_VERSION=$(jq -r .version $agent)
            else
              PREVIOUS_VERSION="new agent"
            fi
            git checkout -
            
            if [ "$PREVIOUS_VERSION" == "new agent" ]; then
              echo "New agent detected: $agent with version $CURRENT_VERSION"
            elif [ "$CURRENT_VERSION" == "$PREVIOUS_VERSION" ]; then
              echo "::error::Version in $agent must be updated before pushing to main branch. Current version: $CURRENT_VERSION"
              exit 1
            else
              echo "Version updated for $agent from $PREVIOUS_VERSION to $CURRENT_VERSION"
            fi
          done

      - name: Save modified agents as artifact
        if: success()
        run: |
          echo '${{ steps.find_modified.outputs.modified_agents }}' > modified_agents.json

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: modified-agents
          path: modified_agents.json
